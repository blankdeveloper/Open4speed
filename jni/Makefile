#############################################################################
# Makefile for building: GLLMgenerator
# Generated by qmake (2.01a) (Qt 4.8.6) on: so b?e 29 15:40:35 2014
# Project:  GLLMgenerator.pro
# Template: app
# Command: /usr/lib/i386-linux-gnu/qt4/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile GLLMgenerator.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I../support -I../support/fmodapi-4.44.08 -I../support/bullet-2.81-rev2613/src -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lGL -lglut -lpng -lzip -lBulletDynamics -lBulletCollision -lLinearMath ../support/fmodapi-4.44.08/libfmodex-4.44.08.so -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/i386-linux-gnu/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = input/keyboard.cpp \
		physics/bullet.cpp \
		input/airacer.cpp \
		input/aitraffic.cpp \
		GLLMgenerator.cpp \
		loaders/dynamiclight.cpp \
		loaders/rgb.cpp \
		loaders/modelo4s.cpp \
		utils/switch.cpp \
		utils/math.cpp \
		utils/io.cpp \
		utils/engine.cpp \
		renderers/opengl/gles20.cpp \
		renderers/opengl/glsl.cpp \
		renderers/opengl/gltexture.cpp \
		sound/fmodapi.cpp \
		car.cpp \
		loaders/pngloader.cpp \
		common.cpp \
		sound/soundpool.cpp \
		utils/scripting.cpp \
		interfaces/model.cpp \
		renderers/opengl/glfbo.cpp \
		renderers/opengl/glvbo.cpp \
		raycaster/octreenode.cpp \
		raycaster/triangle.cpp \
		raycaster/utils.cpp 
OBJECTS       = keyboard.o \
		bullet.o \
		airacer.o \
		aitraffic.o \
		GLLMgenerator.o \
		dynamiclight.o \
		rgb.o \
		modelo4s.o \
		switch.o \
		math.o \
		io.o \
		engine.o \
		gles20.o \
		glsl.o \
		gltexture.o \
		fmodapi.o \
		car.o \
		pngloader.o \
		common.o \
		soundpool.o \
		scripting.o \
		model.o \
		glfbo.o \
		glvbo.o \
		octreenode.o \
		triangle.o \
		utils.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/declarative_debug.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		GLLMgenerator.pro
QMAKE_TARGET  = GLLMgenerator
DESTDIR       = 
TARGET        = GLLMgenerator

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9][^0-9]*\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

Makefile: GLLMgenerator.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/declarative_debug.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile GLLMgenerator.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/declarative_debug.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile GLLMgenerator.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/GLLMgenerator1.0.0 || $(MKDIR) .tmp/GLLMgenerator1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/GLLMgenerator1.0.0/ && $(COPY_FILE) --parents input/keyboard.h interfaces/input.h interfaces/physics.h physics/bullet.h input/airacer.h input/aitraffic.h interfaces/renderer.h interfaces/texture.h loaders/dynamiclight.h loaders/rgb.h interfaces/model.h loaders/modelo4s.h interfaces/sound.h utils/switch.h utils/math.h utils/io.h utils/engine.h renderers/opengl/gles20.h renderers/opengl/glsl.h renderers/opengl/gltexture.h sound/fmodapi.h car.h stdafx.h loaders/pngloader.h interfaces/shader.h common.h sound/soundpool.h utils/scripting.h interfaces/fbo.h renderers/opengl/glfbo.h renderers/opengl/glvbo.h raycaster/octreenode.h raycaster/triangle.h raycaster/utils.h .tmp/GLLMgenerator1.0.0/ && $(COPY_FILE) --parents input/keyboard.cpp physics/bullet.cpp input/airacer.cpp input/aitraffic.cpp GLLMgenerator.cpp loaders/dynamiclight.cpp loaders/rgb.cpp loaders/modelo4s.cpp utils/switch.cpp utils/math.cpp utils/io.cpp utils/engine.cpp renderers/opengl/gles20.cpp renderers/opengl/glsl.cpp renderers/opengl/gltexture.cpp sound/fmodapi.cpp car.cpp loaders/pngloader.cpp common.cpp sound/soundpool.cpp utils/scripting.cpp interfaces/model.cpp renderers/opengl/glfbo.cpp renderers/opengl/glvbo.cpp raycaster/octreenode.cpp raycaster/triangle.cpp raycaster/utils.cpp .tmp/GLLMgenerator1.0.0/ && (cd `dirname .tmp/GLLMgenerator1.0.0` && $(TAR) GLLMgenerator1.0.0.tar GLLMgenerator1.0.0 && $(COMPRESS) GLLMgenerator1.0.0.tar) && $(MOVE) `dirname .tmp/GLLMgenerator1.0.0`/GLLMgenerator1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/GLLMgenerator1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

keyboard.o: input/keyboard.cpp input/keyboard.h \
		interfaces/input.h \
		common.h \
		interfaces/model.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		interfaces/physics.h \
		car.h \
		interfaces/sound.h \
		interfaces/renderer.h \
		utils/engine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o keyboard.o input/keyboard.cpp

bullet.o: physics/bullet.cpp physics/bullet.h \
		interfaces/model.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		interfaces/physics.h \
		car.h \
		interfaces/input.h \
		interfaces/sound.h \
		utils/io.h \
		common.h \
		interfaces/renderer.h \
		utils/engine.h \
		utils/math.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bullet.o physics/bullet.cpp

airacer.o: input/airacer.cpp input/airacer.h \
		interfaces/input.h \
		utils/math.h \
		interfaces/model.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		car.h \
		interfaces/sound.h \
		common.h \
		interfaces/physics.h \
		interfaces/renderer.h \
		utils/engine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o airacer.o input/airacer.cpp

aitraffic.o: input/aitraffic.cpp input/aitraffic.h \
		interfaces/input.h \
		utils/math.h \
		interfaces/model.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		car.h \
		interfaces/sound.h \
		common.h \
		interfaces/physics.h \
		interfaces/renderer.h \
		utils/engine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o aitraffic.o input/aitraffic.cpp

GLLMgenerator.o: GLLMgenerator.cpp loaders/pngloader.h \
		interfaces/texture.h \
		raycaster/octreenode.h \
		interfaces/model.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		interfaces/renderer.h \
		raycaster/triangle.h \
		raycaster/utils.h \
		utils/io.h \
		common.h \
		interfaces/physics.h \
		car.h \
		interfaces/input.h \
		interfaces/sound.h \
		utils/engine.h \
		utils/math.h \
		utils/scripting.h \
		utils/switch.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GLLMgenerator.o GLLMgenerator.cpp

dynamiclight.o: loaders/dynamiclight.cpp interfaces/vbo.h \
		interfaces/shader.h \
		loaders/dynamiclight.h \
		renderers/opengl/gles20.h \
		interfaces/fbo.h \
		interfaces/renderer.h \
		interfaces/model.h \
		interfaces/texture.h \
		utils/io.h \
		common.h \
		interfaces/physics.h \
		car.h \
		interfaces/input.h \
		interfaces/sound.h \
		utils/engine.h \
		utils/switch.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dynamiclight.o loaders/dynamiclight.cpp

rgb.o: loaders/rgb.cpp interfaces/texture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o rgb.o loaders/rgb.cpp

modelo4s.o: loaders/modelo4s.cpp loaders/modelo4s.h \
		interfaces/model.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		utils/io.h \
		common.h \
		interfaces/physics.h \
		car.h \
		interfaces/input.h \
		interfaces/sound.h \
		interfaces/renderer.h \
		utils/engine.h \
		utils/math.h \
		utils/switch.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o modelo4s.o loaders/modelo4s.cpp

switch.o: utils/switch.cpp input/keyboard.h \
		interfaces/input.h \
		loaders/modelo4s.h \
		interfaces/model.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		loaders/pngloader.h \
		physics/bullet.h \
		interfaces/physics.h \
		car.h \
		interfaces/sound.h \
		renderers/opengl/gles20.h \
		interfaces/renderer.h \
		renderers/opengl/glfbo.h \
		renderers/opengl/glsl.h \
		renderers/opengl/gltexture.h \
		renderers/opengl/glvbo.h \
		sound/fmodapi.h \
		sound/soundpool.h \
		utils/io.h \
		common.h \
		utils/engine.h \
		utils/switch.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o switch.o utils/switch.cpp

math.o: utils/math.cpp utils/math.h \
		interfaces/model.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		car.h \
		interfaces/input.h \
		interfaces/sound.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o math.o utils/math.cpp

io.o: utils/io.cpp utils/io.h \
		common.h \
		interfaces/model.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		interfaces/physics.h \
		car.h \
		interfaces/input.h \
		interfaces/sound.h \
		interfaces/renderer.h \
		utils/engine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o io.o utils/io.cpp

engine.o: utils/engine.cpp interfaces/model.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		input/airacer.h \
		interfaces/input.h \
		input/aitraffic.h \
		loaders/pngloader.h \
		utils/engine.h \
		utils/io.h \
		common.h \
		interfaces/physics.h \
		car.h \
		interfaces/sound.h \
		interfaces/renderer.h \
		utils/math.h \
		utils/switch.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o engine.o utils/engine.cpp

gles20.o: renderers/opengl/gles20.cpp loaders/pngloader.h \
		interfaces/texture.h \
		loaders/rgb.h \
		renderers/opengl/gles20.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/renderer.h \
		interfaces/model.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		renderers/opengl/glfbo.h \
		renderers/opengl/gltexture.h \
		utils/io.h \
		common.h \
		interfaces/physics.h \
		car.h \
		interfaces/input.h \
		interfaces/sound.h \
		utils/engine.h \
		utils/math.h \
		utils/switch.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gles20.o renderers/opengl/gles20.cpp

glsl.o: renderers/opengl/glsl.cpp renderers/opengl/glsl.h \
		renderers/opengl/gles20.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/renderer.h \
		interfaces/model.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		utils/io.h \
		common.h \
		interfaces/physics.h \
		car.h \
		interfaces/input.h \
		interfaces/sound.h \
		utils/engine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o glsl.o renderers/opengl/glsl.cpp

gltexture.o: renderers/opengl/gltexture.cpp renderers/opengl/gles20.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/renderer.h \
		interfaces/model.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		renderers/opengl/gltexture.h \
		common.h \
		interfaces/physics.h \
		car.h \
		interfaces/input.h \
		interfaces/sound.h \
		utils/engine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gltexture.o renderers/opengl/gltexture.cpp

fmodapi.o: sound/fmodapi.cpp sound/fmodapi.h \
		interfaces/sound.h \
		utils/io.h \
		common.h \
		interfaces/model.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		interfaces/physics.h \
		car.h \
		interfaces/input.h \
		interfaces/renderer.h \
		utils/engine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fmodapi.o sound/fmodapi.cpp

car.o: car.cpp utils/io.h \
		common.h \
		interfaces/model.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		interfaces/physics.h \
		car.h \
		interfaces/input.h \
		interfaces/sound.h \
		interfaces/renderer.h \
		utils/engine.h \
		utils/math.h \
		utils/switch.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o car.o car.cpp

pngloader.o: loaders/pngloader.cpp interfaces/texture.h \
		utils/io.h \
		common.h \
		interfaces/model.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		interfaces/physics.h \
		car.h \
		interfaces/input.h \
		interfaces/sound.h \
		interfaces/renderer.h \
		utils/engine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pngloader.o loaders/pngloader.cpp

common.o: common.cpp utils/io.h \
		common.h \
		interfaces/model.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		interfaces/physics.h \
		car.h \
		interfaces/input.h \
		interfaces/sound.h \
		interfaces/renderer.h \
		utils/engine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o common.o common.cpp

soundpool.o: sound/soundpool.cpp sound/soundpool.h \
		interfaces/sound.h \
		common.h \
		interfaces/model.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		interfaces/physics.h \
		car.h \
		interfaces/input.h \
		interfaces/renderer.h \
		utils/engine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o soundpool.o sound/soundpool.cpp

scripting.o: utils/scripting.cpp utils/io.h \
		common.h \
		interfaces/model.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		interfaces/physics.h \
		car.h \
		interfaces/input.h \
		interfaces/sound.h \
		interfaces/renderer.h \
		utils/engine.h \
		utils/switch.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o scripting.o utils/scripting.cpp

model.o: interfaces/model.cpp interfaces/model.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o model.o interfaces/model.cpp

glfbo.o: renderers/opengl/glfbo.cpp renderers/opengl/glfbo.h \
		renderers/opengl/gles20.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/renderer.h \
		interfaces/model.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		utils/math.h \
		car.h \
		interfaces/input.h \
		interfaces/sound.h \
		common.h \
		interfaces/physics.h \
		utils/engine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o glfbo.o renderers/opengl/glfbo.cpp

glvbo.o: renderers/opengl/glvbo.cpp renderers/opengl/gles20.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/renderer.h \
		interfaces/model.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		renderers/opengl/glvbo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o glvbo.o renderers/opengl/glvbo.cpp

octreenode.o: raycaster/octreenode.cpp raycaster/octreenode.h \
		interfaces/model.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		interfaces/renderer.h \
		raycaster/triangle.h \
		raycaster/utils.h \
		common.h \
		interfaces/physics.h \
		car.h \
		interfaces/input.h \
		interfaces/sound.h \
		utils/engine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o octreenode.o raycaster/octreenode.cpp

triangle.o: raycaster/triangle.cpp raycaster/triangle.h \
		raycaster/utils.h \
		interfaces/model.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		common.h \
		interfaces/physics.h \
		car.h \
		interfaces/input.h \
		interfaces/sound.h \
		interfaces/renderer.h \
		utils/engine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o triangle.o raycaster/triangle.cpp

utils.o: raycaster/utils.cpp raycaster/utils.h \
		interfaces/model.h \
		interfaces/fbo.h \
		interfaces/shader.h \
		interfaces/texture.h \
		interfaces/vbo.h \
		loaders/dynamiclight.h \
		common.h \
		interfaces/physics.h \
		car.h \
		interfaces/input.h \
		interfaces/sound.h \
		interfaces/renderer.h \
		utils/engine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o utils.o raycaster/utils.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

